1) https://www.udemy.com/course/ecommerce-shop-react-redux/learn/lecture/15534660#overview
2) https://www.udemy.com/course/react-hooks-writing-real-project/learn/lecture/17253322#overview
3) https://www.youtube.com/watch?v=G3GGXIhggGs
4) як авторизуватись і тримати сессію? токен слати на сервак? куки? тільки на фронті тримати дані?
5) use React Redux Saga

hoc - реквести з error  і спіннер
hoc - модалка - просто компонент без редюсера
при getbyId виконувати 2 екшена - в employee та в employees
 компонентах в нас доступний весь стейт, а також в екшенах - перевірити
для view та edit - тримати не всі дані employee а тільки id і просто доставати з стейту.employees всі дані кожного раз - але при тому при getEmployeeById кожного разу в employees оновлювати дані
для таблиці використовувати тільки id, так само і для departments - тільки id, самі дані окремо в сторі тримати
замість одного редюсера employees - буде 4: employees, employeesPage, employee, departments(просто дані статичні)
карточка mployee >>> js.entries <div>key <div>value

переделать все екшени в функции и упростить mapDispatchToProps

в редюсері переробити getNewItems в 3 ф-ції додати, редагувати, видалити

редюсер employeesPage працює з пагінацією і пошуком

добавить к Alert etTimeout на скритие , а от помилки еррор баундарі - не скриваємо вже

отдельний редюсер для departments - окрема сутність

пагінація і серч - робити запити на сервак, на початку 1 додатковий запит на кількість юзерів і побудувати кнопки-сторінки, після чого кешувати дані - власний айді і якщо вже є на клієнті завантажені дані - то запит на сервак не треба - сортування на серваку і на клієнті однакове, зв'язати serverId та clientId
кешування реалізувати?
робити 2 запити: getIds потім getEmployeesтільки тих яких немає в сторі
очищається кеш простим оновленням сторінки
пагінація - може можна послати запит в firebase запросить сторінку якусь? offset?
?page=2&count=5

{
	users: [],
	pageSize: 5,
	totalUsersCount: 19,
	currentPage: 3
}
getCountUser - не роюить окремим запитом, а повертати в кожному запиті
екшени: GET_EMPLOYEES та GET_EMPLOYEES_COUNT


в table в рендері rows передавати key параметром і TR писати в компоненті

для пагінації також міняти URL - /employees/3___kjhfkjshf - парсить як сторінка і ID

не існуючі сторінки і id-шніки обробляти через ALERT а не через ErrorBoundary

заюзать classnames

currentPage - брать не із стора а із url

.view-container - для кожної сторінки pages

заменить --- value ? null : <div> на value && <div>

EMPLOYEES_GET_REQUEST и EMPLOYEES_GET_FAILURE - об'єднати

додати selectors як мінімум для getEmployeeById - рахувати пагінацію

алерти визивати не в тейблз а на тей самий екшен в редюсорі алерта

я не зробив пошук

пошук і пагінація - локальний стейт, а зі стору як з БД тільки дані підгрузити

departments зробити з бази

замість thunk юзать САГУ!

винести окремо loading на всю аплікуху один?


getEmployees та getDepartments - 2 сайд ефекта - запустити через saga - yield all() --- або fork - яка різниця?
використовується для відокремлення сайдефектів - функцій, які запити на сервак кидають
як написати слухати декілька екшенів?
https://github.com/maprihoda/react-redux-crud/blob/master/client/src/sagas/index.js
yield all()
yield all()


використати redux-forms




=== Items
- SPA
- authentication page
- page with data grid
- use https://firebase.google.com for backend
- use React Redux Saga

- use bootstrap



=== Details

--- employee
  - id
  - name
  - active
  - department
  - password

--- authentication page
  some user have login and password
  Please login
  input login
  input password
  or
  Welcome text

--- page with data grid
  <pagination>
  HEADER = Hello, name; addBtn; logoutBtn
  search field input + SearchBtn
  table >>> | view btn | edit btn | empID | empName | empActive [YES/NO] | empDepartment select | Delete btn
  <pagination>

--- filtering by search value
  change table rows AND PAGEs count
  - it should be request on server + get users 10 SORTED BY ID

--- empDepartment select
  - HR
  - Tech
  - Finance

--- modal window COMPONENT

--- Delete btn
  modal window - are you sure?
  btnOk, btnNo
  - it should be request on server + get users 10 SORTED BY ID

--- edit btn
  modal window of edit form
  empName: input
  empActive: CheckBox
  empDepartment: Select
  btnSave, btnCancel
  - it should be request on server

--- view btn
  modal window of show info
  empName: text
  empActive: Yes/No
  empDepartment: text
  btnOk

--- add btn
  modal window of edit form
  empName: input >>> empty
  empActive: CheckBox >>> uncheck
  empDepartment: Select >>> -none-
  btnSave, btnCancel
  - it should be request on server + get users 10 SORTED BY ID



=== result
- zip format
- put Google drive
- send link to download jobs@ukeess.com





--------------------------------









================== авторизація

https://qna.habr.com/q/457821
https://www.youtube.com/watch?v=5s3CqW3uDgk


isAuth в stroe мати таке поле


https://www.youtube.com/watch?v=b3pU3hsJlNk&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=62
